#version 460 core

uniform uint uVoxelResolution;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
layout (rgba16f) uniform writeonly image3D uInjected;
layout (rgba16f) uniform readonly image3D uLastInjected;

const ivec3 offsets[] = ivec3[8]
(
    ivec3(1, 1, 1),
    ivec3(1, 1, 0),
    ivec3(1, 0, 1),
    ivec3(1, 0, 0),
    ivec3(0, 1, 1),
    ivec3(0, 1, 0),
    ivec3(0, 0, 1),
    ivec3(0, 0, 0)
);

// subject to change according to ConeTracing method
vec4 FetchAvg(ivec3 position) {
    vec4 sum = vec4(0);
    for (int i = 0; i < 8; i++) {
        vec4 color = imageLoad(uLastInjected, position + offsets[i]);
        sum.rgb += color.a * color.rgb;
        sum.a += color.a;
    }
    if (sum.a < 1e-3) return vec4(0);
    return vec4(sum.rgb / sum.a, sum.a / 8);
}

void main() {
    if (gl_GlobalInvocationID.x >= uVoxelResolution ||
        gl_GlobalInvocationID.y >= uVoxelResolution ||
        gl_GlobalInvocationID.z >= uVoxelResolution) return;

    ivec3 voxelPosition = ivec3(gl_GlobalInvocationID);
    vec4 avg = FetchAvg(2 * voxelPosition);
    imageStore(uInjected, voxelPosition, avg);
}
